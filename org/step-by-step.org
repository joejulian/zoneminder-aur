* Step by step
** TODO BUILD the zoneminder package
*** TODO Build zoneminder dependencies which are in the AUR
    1. [ ] Download the AUR dependencies
       Here's a helper script to download the PKGBUILDS from the AUR:
       #+BEGIN_SRC sh :tangle bin/download-aur-tarballs.sh :shebang #!/bin/bash
         # script to download Zoneminder dependency build tarballs from AUR
         mkdir --parent aur && cd aur
         wget https://aur.archlinux.org/packages/ca/cambozola/cambozola.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-astro-suntime-zoneminder/perl-astro-suntime-zoneminder.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-expect/perl-expect.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-net-sftp-foreign/perl-net-sftp-foreign.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-php-serialization/perl-php-serialization.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-sys-mmap/perl-sys-mmap.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-x10-zoneminder/perl-x10-zoneminder.tar.gz
       #+END_SRC
    2. [ ] Build and install [[https://aur.archlinux.org/packages/perl-astro-suntime][perl-astro-suntime]]
       1. [ ] Download https://aur.archlinux.org/packages/pe/perl-astro-suntime/perl-astro-suntime.tar.gz
       2. [ ] Unpack
       3. [ ] Change the dependency to perl-time-modules from perl-time-parsedate
       4. [ ] Build and install
    3. [ ] Build and install [[https://aur.archlinux.org/packages/cambozola][cambozola]]
    4. [ ] Build and install perl-expect
    5. [ ] Build and install perl-net-sftp-foreign
    6. [ ] Build and install perl-php-serialization
    7. [ ] Build and install perl-sys-mmap
    8. [ ] Build and install perl-x10
       1. [ ] Download
       2. [ ] Unpack
       3. [ ] Change the dependency to perl-time-modules from perl-time-parsedate
       4. [ ] Build and install
*** TODO Build and install the zoneminder package
    #+BEGIN_SRC sh
      makepkg -s
    #+END_SRC
    #+BEGIN_SRC sh
      sudo pacman --upgrade ./zoneminder-1.27.0-5-i686.pkg.tar.xz    
    #+END_SRC
** TODO Configure Apache and PHP
   1. (Optional, recommended) Copy config files
      #+BEGIN_SRC sh :tangle bin/make.post.zoneminder.install.backups :shebang #!/bin/bash
	set -o errexit
	set -o verbose
	cd ../config
	cp -i /etc/php/php.ini php.ini.post.zoneminder.install
	cp -i /etc/httpd/conf/httpd.conf httpd.conf.post.zoneminder.install
      #+END_SRC
   2. [ ] Configure /etc/httpd/conf/httpd.conf
      1. (Optional, recomended) Read primary documentation https://wiki.archlinux.org/index.php/Apache_HTTP_Server#PHP
      2. [ ] Configure httpd.conf file:/etc/httpd/conf/httpd.conf:
	 1. [ ] To use mod_mpm_prefork, open file:/etc/httpd/conf/httpd.conf and replace
	    #+BEGIN_SRC conf
	      LoadModule mpm_event_module modules/mod_mpm_event.so
	    #+END_SRC
	    with
	    #+BEGIN_SRC conf
	      LoadModule mpm_prefork_module modules/mod_mpm_prefork.so
	    #+END_SRC
	 2. [ ] Place this in the LoadModule list anywhere after LoadModule dir_module modules/mod_dir.so:
	    (Note: zoneminder.install attemps to do this but fails)
	    #+BEGIN_SRC conf
	      LoadModule php5_module modules/libphp5.so
	    #+END_SRC
	 3. [ ] Place this at the end of the Include list: (Note: zoneminder.install did this)
	    #+BEGIN_SRC conf
	      Include conf/extra/php5_module.conf
	    #+END_SRC
	 4. [ ] Place this at the end of the Include list: (Note: zoneminder.install did this)
	    #+BEGIN_SRC conf
	      Include /etc/httpd/conf/extra/httpd-zoneminder.conf
	    #+END_SRC
	 5. [ ] Enable 
	    #+BEGIN_SRC conf
	      LoadModule cgi_module modules/mod_cgi.so           
	    #+END_SRC
	    See http://httpd.apache.org/docs/current/howto/cgi.html
	    Search for "cgi_module" Google => site:https://wiki.archlinux.org cgi_module
   3. [ ] Configure file://etc/php/php.ini
      #+BEGIN_SRC conf
	open_basedir = /srv/http/:/home/:/tmp/:/usr/share/pear/:/usr/share/webapps/:/etc:/srv/http/zoneminder:/var/cache/zoneminder
      #+END_SRC
** TODO Setting up the zoneminder database in MySQL
   1. [ ] Start mysql server
	 #+BEGIN_SRC sh
	   systemctl restart mysqld
	 #+END_SRC
   2. [ ] add Zoneminder database
      #+BEGIN_SRC sh :tangle bin/mysql-setup.sh :shebang #!/usr/bin/bash
	set -o verbose
	mysqladmin --defaults-file=/etc/mysql/my.cnf -p -f reload
	cat /usr/share/zoneminder/db/zm_create.sql | mysql --defaults-file=/etc/mysql/my.cnf -p
	echo 'grant lock tables, alter,select,insert,update,delete on zm.* to 'zmuser'@localhost identified by "zmpass";' | mysql --defaults-file=/etc/mysql/my.cnf -p mysql
      #+END_SRC
** TODO Start the zoneminder service
   1. [ ] systemctl start zoneminder
      #+BEGIN_SRC sh :tangle bin/restart-everything.sh :shebang #!/bin/bash
        set -o verbose
	systemctl restart mysqld
	systemctl restart httpd
	systemctl restart zoneminder
      #+END_SRC
* Remove and reinstall
  1. [X] C-c C-v t runs the command org-babel-tangle, which is an interactive
  2. [X] Uninstall zoneminder
     #+BEGIN_SRC sh :tangle /tmp/remove-zoneminder.sh :shebang #!/bin/bash
       set -o nounset
       # set -o errexit
       set -o verbose
       sudo systemctl stop zoneminder
       sudo pacman --remove zoneminder
       sudo rm -rvf /var/cache/zoneminder
       sudo rm -rvf /srv/zoneminder
       sudo rm -rvf /srv/http/zoneminder
       sudo rm -rvf /zoneminder
       sudo mysql
     #+END_SRC
  3. [X] Remove PHP
     #+BEGIN_SRC sh :tangle /tmp/remove-php.sh :shebang #!/bin/bash
       set -o errexit
       set -o verbose
       # set -o errexit
       sudo systemctl stop httpd
       sudo pacman --remove php-apache php-gd php-mcrypt php
       sudo rm -rvf /etc/php
     #+END_SRC
  4. [X] Remove Apache
     #+BEGIN_SRC sh :tangle /tmp/remove-apache.sh :shebang #!/bin/bash
       set -o errexit
       set -o verbose
       # set -o errexit
       sudo systemctl stop httpd
       sudo pacman --remove apache
       sudo rm -rvf /etc/httpd/
     #+END_SRC
  5. [X] Remove AUR modules
     #+BEGIN_SRC perl :tangle /tmp/remove-zoneminder-modules.pl :shebang #!/usr/bin/env perl
       use warnings;
       use strict;

       my @aur_modules = qw( cambozola perl-astro-suntime-zoneminder
			     perl-expect perl-net-sftp-foreign
			     perl-php-serialization perl-sys-mmap
			     perl-x10-zoneminder
			  );

       foreach my $aur_module (@aur_modules) {
	 # print $aur_module;
       }

       my $command = "sudo pacman --remove cambozola perl-astro-suntime-zoneminder perl-expect perl-net-sftp-foreign perl-php-serialization perl-sys-mmap perl-x10-zoneminder";

       system("$command");
     #+END_SRC
* Dependencies Tables
  
  | apache                 |     |
  | cambozola              | AUR |
  | gnutls                 |     |
  | mariadb                |     |
  | perl-archive-zip       |     |
  | perl-date-manip        |     |
  | perl-dbd-mysql         |     |
  | perl-dbi               |     |
  | perl-expect            |     |
  | perl-libwww            |     |
  | perl-mime-lite         |     |
  | perl-mime-tools        |     |
  | perl-php-serialization |     |
  | perl-net-sftp-foreign  |     |
  | perl-sys-mmap          |     |
  | perl-time-modules      |     |
  | perl-x10               |     |
  | php                    |     |
  | php-apache             |     |
  | php-gd                 |     |
  | php-mcrypt             |     |
  | polkit                 |     | 


           wget https://aur.archlinux.org/packages/ca/cambozola/cambozola.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-astro-suntime/perl-astro-suntime.tar.gz
         # wget https://aur.archlinux.org/packages/pe/perl-time-parsedate/perl-time-parsedate.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-expect/perl-expect.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-net-sftp-foreign/perl-net-sftp-foreign.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-php-serialization/perl-php-serialization.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-sys-mmap/perl-sys-mmap.tar.gz
         wget https://aur.archlinux.org/packages/pe/perl-x10/perl-x10.tar.gz

  * TODO
  1. [ ] Apache Config (SED documentation)
  2. [ ] PHP Config (SED documentation)
  3. [ ] Step by Step Installation
     1. [ ] Build the zoneminder arch linux package
	1. [ ] Build and install dependencies
	   1. [ ] Perl dependencies
	   2. [ ] Camboloza dependencies
* date.timezone = "US/Central"
  file:/etc/php/php.ini
* TROUBLESHOOTING
** 17:44 zm_monitor.cpp
   1. [ ] file:./zoneminder/ZoneMinder-1.28.0/src/zm_monitor.cpp
      #+BEGIN_SRC c++
        if ( buffered_playback )
          {
            Info("buffered_playback");
            char swap_path[PATH_MAX] = "";
            

            Info("WriteJpeg 1");
            monitor->image_buffer[index].image->WriteJpeg( temp_image_buffer[temp_index].file_name, config.jpeg_file_quality );
            Info("WriteJpeg 2");


        Debug( 1, "Cleaning swap files from %s", swap_path );
        Info ("Cleaning swap files from %s", swap_path );

      #+END_SRC
      #+BEGIN_SRC c++
        Info("rmdir %s", swap_path);
        if ( rmdir( swap_path ) < 0 )
      #+END_SRC
** src/zm_image.cpp
   1. [ ] Patch zm_image.cpp
      1. [ ] tar -xf v1.28.0.tar.gz
      2. [ ] cd ZoneMinder-1.28.0/
      3. [ ] emacs file:./zoneminder/ZoneMinder-1.28.0/src/zm_image.cpp
	 bool Image::WriteJpeg( const char *filename, int quality_override ) const
	 	FILE *outfile;
	if ( (outfile = fopen( filename, "wb" )) == NULL )
	{
		Error( "Image::WriteJpeg: Can't open %s for writing: %s", filename, strerror(errno) );
		return( false );
	}
      4. [ ] tar -cvf v1.28.0.tar ZoneMinder-1.28.0/
      5. [ ] gzip v1.28.0.tar
      6. [ ] makepkg -f --skipinteg
	 #+BEGIN_SRC sh :tangle ./zoneminder/doit.sh :shebang #!/bin/bash
           set -o verbose
           set -o errexit

           tar -cvf v1.28.0.tar ZoneMinder-1.28.0/
           gzip v1.28.0.tar
           makepkg -f --skipinteg
           sudo pacman --upgrade ./zoneminder-1.28.0-4-i686.pkg.tar.xz
           sudo systemctl restart zoneminder
	 #+END_SRC
   2. mkdir
      1. file:./zoneminder/ZoneMinder-1.28.0/src/zm_event.cpp
      1. file:./zoneminder/ZoneMinder-1.28.0/src/zm_monitor.cpp
	        L3947
	 	info("zm_monitor.cpp/void MonitorStream::runStream(): if ( checkSwapPath( swap_path, false ) )");
                if ( checkSwapPath( swap_path, false ) )
	   monitor->image_buffer[index].image->WriteJpeg( temp_image_buffer[temp_index].file_name, config.jpeg_file_quality )
** zms[14335]: ERR [Can't open /var/tmp/zmswap-m1/zmswap-q584480/zmswap-i00002.jpg: No such file or directory]
   1. [ ] Check Options/Paths/PATH_SWAP => /var/tmp
   2. [ ] Check permissions on /var/tmp => OK
   3. [ ] Check symbolic links
** sudo journalctl -f
** https://github.com/ZoneMinder/ZoneMinder/pull/524
* TDW 	:noexport:
** TDW Action Log
*** 2015-01-08 Improve installation and upgrade instructions
    1. Note 1 :: NOW    
** AUR resources
*** [[https://aur.archlinux.org/][Log In]]
*** https://aur.archlinux.org/packages/zoneminder/    
** TODO HOW TO UPLOAD PKGBUILD TO AUR
** Package Checklist
   1. [ ] C-c C-v t runs the command org-babel-tangle, which is an interactive
   2. [ ] Uninstall zoneminder
      #+BEGIN_SRC sh :tangle /tmp/remove-zoneminder.sh :shebang #!/bin/bash
        set -o nounset
        set -o errexit
        set -o verbose
        sudo systemctl stop zoneminder
        sudo pacman --remove zoneminder
        sudo rm -rvf /var/cache/zoneminder
        sudo rm -rvf /srv/zoneminder
        sudo rm -rvf /srv/http/zoneminder
        sudo mysql
      #+END_SRC
   3. [ ] Remove PHP
      #+BEGIN_SRC sh :tangle /tmp/remove-php.sh :shebang #!/bin/bash
        set -o errexit
        set -o verbose
        set -o errexit
        sudo systemctl stop httpd
        sudo pacman --remove php-apache php-gd php-mcrypt php
        sudo rm -rvf /etc/php
      #+END_SRC
   4. [ ] Remove Apache
      #+BEGIN_SRC sh :tangle /tmp/remove-apache.sh :shebang #!/bin/bash
        set -o errexit
        set -o verbose
        set -o errexit
        sudo systemctl stop httpd
        sudo pacman --remove apache
        sudo rm -rvf /etc/httpd/
      #+END_SRC
   5. [ ] Remove AUR modules
      #+BEGIN_SRC perl :tangle /tmp/remove-zoneminder-modules.pl :shebang #!/usr/bin/env perl
        use warnings;
        use strict;

        my @aur_modules = qw( cambozola perl-astro-suntime-zoneminder
                              perl-expect perl-net-sftp-foreign
                              perl-php-serialization perl-sys-mmap
                              perl-x10-zoneminder
                           );

        foreach my $aur_module (@aur_modules) {
          # print $aur_module;
        }

        my $command = "sudo pacman --remove cambozola perl-astro-suntime-zoneminder perl-expect perl-net-sftp-foreign perl-php-serialization perl-sys-mmap perl-x10-zoneminder";

        system("$command");
      #+END_SRC
   6. [ ] Install AUR modules
   7. [ ] Clean zoneminder
   8. [ ] Build zoneminder
   9. [ ] install zoneminder
   10. [ ] backup /etc/httpd/httpd.conf
   11. [ ] backup /etc/php/php.ini
   12. [ ] /etc/php.ini.zoneminder
   13. [ ] /etc/httpd/httpd.conf.zoneminder
   14. [ ] Load MySQL
   15. [ ] systemctl start zoneminder
   16. [ ] Upload to Arch Linux
       1. [ ] run mkaurball (pkgbuild-introspection)
	  + Will end up with a file like zoneminder-1.28.0-1.src.tar.gz
       2. [ ] Read [[https://wiki.archlinux.org/index.php/Arch_User_Repository#Sharing_and_maintaining_packages][Sharing and maintaining packages]]
       3. [ ] [[https://aur.archlinux.org/][Log In]]
       4. [ ] [[https://aur.archlinux.org/submit/][Submit]]
** makepkg  
  1. makepkg --geninteg >> PKGBUILD
  2. makepkg --syncdeps
** AUR Links
*** https://aur.archlinux.org/packages/zoneminder/
** Relevant code 1.27
   1. file://srv/http/zoneminder/includes/functions.php
      See function daemonCheck( $daemon=false, $args=false ) L1071
   2. file://usr/bin/zmdc.pl

** TROUBLESHOOTING SOCKET DIRECTORY https://github.com/ZoneMinder/ZoneMinder/issues/518
| PACKAGE | VAR                                   | EFFECT | stop web | start sysctrl |
|---------+---------------------------------------+--------+----------+---------------|
|    1.27 | -DZM_PATH_SOCKS=/srv/zoneminder/socks | None   | Yes      | Yes/Web View  |
|         |                                       |        |          |               | 


| dir                   | ls                                                              |
|-----------------------+-----------------------------------------------------------------|
| /tmp/zm               | drwx------ 2 http http 60 Sep 29 08:54 /tmp/zm/                 |
| /srv/zoneminder/socks | drwxr-xr-x 2 http http 4096 Sep 29 08:48 /srv/zoneminder/socks/ |
|                       |                                                                 |

| socket dir            | sudo -u http zmdc.pl check | INFO                               |
|-----------------------+----------------------------+------------------------------------|
| /tmp/zm               | running                    | daemonCheck returned a status of 0 |
| /srv/zoneminder/socks | running                    | daemonCheck returned a status of 1 |

| dir                   | ls                                                              |
|-----------------------+-----------------------------------------------------------------|
| /tmp/zm               | drwx------ 2 http http 60 Sep 29 08:54 /tmp/zm/                 |
| /srv/zoneminder/socks | drwxr-xr-x 2 http http 4096 Sep 29 08:48 /srv/zoneminder/socks/ |
| /tmp/zm               | drwxr-xr-x 2 http http 60 Sep 29 09:19 /tmp/zm/                 |

*** https://github.com/ZoneMinder/ZoneMinder/issues/518
*** file:/srv/http/zoneminder/includes/functions.php
    #+BEGIN_SRC perl
      // L1066
      Info( "TDW daemonCheck" );
    #+END_SRC
** CMAKE
*** Config Table
| ./configure         | Arch Linux                    | Debian Sid             | CMAKE                                                                                     |
|---------------------+-------------------------------+------------------------+-------------------------------------------------------------------------------------------|
| --prefix            | /usr                          | /usr                   | CMAKE_INSTALL_PREFIX                                                                      |
| --enable-crashtrace | no                            | no                     |                                                                                           |
| --enable-debug      | no                            |                        |                                                                                           |
| --enable-mmap       | yes                           | yes                    | ZM_NO_MMAP default: OFF                                                                   |
| --sysconfdir        | /etc                          | /etc/zm                |                                                                                           |
| --with-cgidir       | /srv/http/cgi-bin             | /usr/lib/cgi-bin       | ZM_CGIDIR <prefix>/libexec/zoneminder/cgi-bin => /var/run/zm/                             |
| --with-extralibs    | '-L/usr/lib -L/usr/lib/mysql' |                        | CMAKE_LIBRARY_PATH                                                                        |
| --with-libarch      | lib                           |                        |                                                                                           |
| --with-ffmpeg       | /usr                          |                        |                                                                                           |
| --with-mysql        | /usr                          | /usr                   |                                                                                           |
| --with-webdir       | /srv/http/$pkgname            | /usr/share/zoneminder  | ZM_WEBDIR default: usr/share/zoneminder/www => /srv/http/$pkgname                         |
| --with-webgroup     | http                          | www-data               |                                                                                           |
| --with-webhost      | localhost                     |                        |                                                                                           |
| --with-webuser      | http                          | www-data               | ZM_WEB_USER The user apache runs on. Leave empty for automatic detection.                 |
| --host              |                               | $(DEB_HOST_GNU_TYPE)   |                                                                                           |
| --build             |                               | $(DEB_BUILD_GNU_TYPE)  |                                                                                           |
| --mandir            |                               | \$${prefix}/share/man  |                                                                                           |
| --infodir           |                               | \$${prefix}/share/info |                                                                                           |
| --ffmpeg            |                               | /usr                   |                                                                                           |
|                     |                               |                        | ZM_RUNDIR /var/run/zm                                                                     |
|                     |                               |                        | ZM_TMPDIR /tmp/zm                                                                         |
|                     |                               |                        | ZM_LOGDIR /var/log/zm                                                                     |
|                     |                               |                        | ZM_WEBDIR <prefix>/share/zoneminder/www                                                   |
|                     |                               |                        | ZM_CONTENTDIR  (events and images), default: /var/lib/zoneminder => /var/cache/zoneminder |
|                     |                               |                        | ZM_DB_HOST localhost                                                                      |
|                     |                               |                        | ZM_DB_NAME zm                                                                             |
|                     |                               |                        | ZM_DB_USER zmuser                                                                         |
|                     |                               |                        | ZM_DB_PASS zmpass                                                                         |
|                     |                               |                        | ZM_WEB_GROUP          |

Advanced:
			A list of optional libraries, separated by semicolons, e.g. ssl;theora
	ZM_MYSQL_ENGINE		MySQL engine to use with database, default: InnoDB
	ZM_NO_MMAP		Set to ON to not use mmap shared memory. Shouldn't be enabled unless you experience problems with the shared memory. default: OFF
	ZM_NO_FFMPEG		Set to ON to skip ffmpeg checks and force building ZM without ffmpeg. default: OFF
	ZM_NO_X10		Set to ON to build ZoneMinder without X10 support. default: OFF
	ZM_PERL_SUBPREFIX	Use a different directory for the zm perl modules. NOTE: This is a subprefix, e.g. lib will be turned into <prefix>/lib, default: <libarch>/perl5
	ZM_PERL_USE_PATH	Override the include path for zm perl modules. Useful if you are moving the perl modules without using the ZM_PERL_SUBPREFIX option. default: <prefix>/<zmperlsubprefix>
*** INSTALL
    Installing ZoneMinder with cmake
--------------------------------
Configuration
-------------
cmake by default does not require any parameters, but its possible to override the defaults with the options below.

1. As a command line parameter, e.g. cmake -DCMAKE_VERBOSE_MAKEFILE=ON .
   
cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DZM_WEB_USER=http -DZM_CGIDIR=/var/run/zm/ .   

Possible configuration options: 
	ZM_RUNDIR		Location of transient process files, default: /var/run/zm
	ZM_TMPDIR		Location of temporary files, default: /tmp/zm
	ZM_LOGDIR 		Location of generated log files, default: /var/log/zm
	ZM_WEBDIR		Location of the web files, default: <prefix>/share/zoneminder/www
	ZM_CGIDIR		Location of the cgi-bin files, default: <prefix>/libexec/zoneminder/cgi-bin
	ZM_CONTENTDIR		Location of dynamic content (events and images), default: /var/lib/zoneminder
	ZM_DB_HOST		Hostname where ZoneMinder database located, default: localhost
	ZM_DB_NAME		Name of ZoneMinder database, default: zm
	ZM_DB_USER		Name of ZoneMinder database user, default: zmuser
	ZM_DB_PASS		Password of ZoneMinder database user, default: zmpass
	ZM_WEB_USER		The user apache or the local web server runs on. Leave empty for automatic detection. If that fails, you can use this variable to force
	ZM_WEB_GROUP		The group apache or the local web server runs on, Leave empty to be the same as the web user
Advanced:
	ZM_EXTRA_LIBS		A list of optional libraries, separated by semicolons, e.g. ssl;theora
	ZM_MYSQL_ENGINE		MySQL engine to use with database, default: InnoDB
	ZM_NO_MMAP		Set to ON to not use mmap shared memory. Shouldn't be enabled unless you experience problems with the shared memory. default: OFF
	ZM_NO_FFMPEG		Set to ON to skip ffmpeg checks and force building ZM without ffmpeg. default: OFF
	ZM_NO_X10		Set to ON to build ZoneMinder without X10 support. default: OFF
	ZM_PERL_SUBPREFIX	Use a different directory for the zm perl modules. NOTE: This is a subprefix, e.g. lib will be turned into <prefix>/lib, default: <libarch>/perl5
	ZM_PERL_USE_PATH	Override the include path for zm perl modules. Useful if you are moving the perl modules without using the ZM_PERL_SUBPREFIX option. default: <prefix>/<zmperlsubprefix>


Useful configuration options provided by cmake:
CMAKE_VERBOSE_MAKEFILE - Set this to ON (default OFF) to see what cmake is doing. Very useful for troubleshooting.
CMAKE_BUILD_TYPE - Set this to Debug (default Release) to build ZoneMinder with debugging enabled.
CMAKE_INSTALL_PREFIX - Use this to change the prefix (default /usr/local). This option behaves like --prefix from autoconf. Package maintainers will probably want to set this to "/usr".

Useful environment variables provided by cmake:
CMAKE_INCLUDE_PATH - Use this to add to the include search path.
CMAKE_LIBRARY_PATH - Use this to add to the library search path.
CMAKE_PREFIX_PATH - Use this to add to both include and library search paths. <path>/include will be added to the include search path and <path>/lib to the library search path. Multiple paths can be specified, separated by a : character. For example: export CMAKE_PREFIX_PATH="/opt/libjpeg-turbo:/opt/ffmpeg-from-git"

CFLAGS, CPPFLAGS and other environment variables:
To append to the CFLAGS and CXXFLAGS, please use the CFLAGS and CXXFLAGS environment variables.
Or use the CMAKE_C_FLAGS and CMAKE_CXX_FLAGS configuration options.
To replace the CFLAGS and CXXFLAGS entirely:
+   For the Release build type: use CMAKE_C_FLAGS_RELEASE for the CFLAGS and CMAKE_CXX_FLAGS_RELEASE for the CXXFLAGS
+   For the Debug build type: use CMAKE_C_FLAGS_DEBUG for the CFLAGS and CMAKE_CXX_FLAGS_DEBUG for the CXXFLAGS
Other important environment variables (such as LDFLAGS) are also supported.

The DESTDIR environment variable is also supported, however it needs to be set before invoking make install. For example: DESTDIR=mydestdir make install
For more information about DESTDIR, see:
+   http://www.gnu.org/prep/standards/html_node/DESTDIR.html

Basic steps for installing ZoneMinder on a fresh system
-------------------------------------------------------
1) After installing all the required dependencies, in the project directory, run "cmake [extra options] ."
This behaves like ./configure. It is also possible to supply configuration options, e.g. cmake -DZM_DB_PASS="mypass" .
2) Run "make" to compile ZoneMinder
3) Run "make install" (as root, or use sudo) to install ZoneMinder to your system.
4) Create a directory for the content and the necessary symlinks by running zmlinkcontent.sh with the directory you want to use. e.g. ./zmlinkcontent.sh /nfs/zm
5) Create a database for zoneminder, called "zm".
6) Create a user for the zoneminder database, called zmuser with password and full privileges to the "zm" database.
NOTE: The database server, database name, user and password can be different and adjusted during configuration step with the options in this file, or by editing /etc/zm.conf
7) Populate the zoneminder database using the script zm_create.sql. This should be found in <prefix>/share/zoneminder/db or in the project/db directory.

8) Create an apache virtual host for ZoneMinder. Make sure to use the same paths as ZM_WEBDIR and ZM_CGIDIR in /etc/zm.conf
9) Create other config if desired (e.g. rsyslog, logrotate and such). Some of this can be found in <prefix>/share/zoneminder/misc or project/misc directory
10) Setup an init script for your system. Its also possible to use "zmpkg.pl start" and "zmpkg.pl stop" if you can't find a one.

Basic steps for upgrading ZoneMinder
------------------------------------
1) If you wish to use the same paths and configuration as the currently installed ZoneMinder, you need to provide cmake with options that match your current installation.
You can provide those options in the command line to cmake, e.g. cmake -DZM_DB_PASS="blah" -DZM_WEBDIR="/usr/local/share/zoneminder/www" -DCMAKE_INSTALL_FULL_BINDIR="/usr/bin" .
Or alternatively, for convenience, use the cmakecacheimport.sh script. This reads a zoneminder configuration file (zm.conf) and creates a cmake initial cache file called zm_conf.cmake, which you can then provide to cmake.
For example:
./cmakecacheimport.sh /etc/zm.conf
cmake -C zm_conf.cmake [extra options] .

2) Run "make" to compile ZoneMinder
3) Run "make install" (as root, or use sudo) to install ZoneMinder to your system.
4) Depending on your configuration: If the DIR_EVENTS and DIR_IMAGES options are set to default (pointing to web directory/events and web directory/images), You will need to update the symlinks in the web directory to the correct folders. e.g. web directory/events should point to the real events directory, and likewise for the images directory.
You can use the zmlinkcontent.sh script for this. For example, if /var/lib/zoneminder is the folder that contains the "images" and "events" directories, you can use:
./zmlinkcontent.sh /var/lib/zoneminder
By default, the content directory for new installations is /var/lib/zoneminder. This can be overridden in cmake with the ZM_CONTENTDIR option. e.g. cmake -DZM_CONTENTDIR="/some/big/storage/zm" .

5) Run zmupdate.pl to update the database layout to the new version.

Uninstallation:
---------------
By default, cmake does not have an uninstall target, however we have added a one. Simply run make uninstall (or DESTDIR=mydestdir make uninstall if a DESTDIR was used) and it will remove all the files that cmake installed.
It's also possible to do this manually. The file install_manifest.txt contains the list of files installed to the system. This can be used in many ways to delete all files installed by cmake, such as: xargs rm < install_manifest.txt

Contributions:
--------------
Please visit our GitHub at http://github.com/ZoneMinder/ZoneMinder

*** CMAKE
    
*** Git Branch
** Debian
   + https://packages.debian.org/unstable/net/zoneminder
   + https://packages.debian.org/wheezy/zoneminder
*** zoneminder_1.26.5-3.debian.tar.xz  zoneminder_1.26.5.orig.tar.gz
*** Step by step
    1. [ ] Go to https://packages.debian.org/source/sid/zoneminder
    2. [ ] Download [[http://ftp.de.debian.org/debian/pool/main/z/zoneminder/zoneminder_1.26.5-3.debian.tar.xz]]
    3. [ ] Unpack and view rules file for configure parameters
** PRIMARY DOCUMENTATION					   :noexport:
** DEBUGGING
***   
|        Time | Component |  PID | Level | Message                                                                                                                                 | File                              | Line |
|-------------+-----------+------+-------+-----------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------+------|
| 00:15:18.70 | web_js    | 3770 | ERR   | getStreamCmdResponse stream error: socket_sendto( /tmp/zm/zms-311647s.sock ) failed: No such file or directory - checkStreamForErrors() | ?view=watch                       |      |
| 00:15:18.60 | web_php   | 3770 | ERR   | socket_sendto( /tmp/zm/zms-311647s.sock ) failed: No such file or directory                                                             | zoneminder/includes/functions.php | 2337 |
** https://wiki.archlinux.org/index.php/Arch_User_Repository	   :noexport:
   1. [ ] run mkaurball
   2. [[https://wiki.archlinux.org/index.php/Arch_User_Repository#Sharing_and_maintaining_packages][Sharing and maintaining packages]]
   3. [ ] 
** https://aur.archlinux.org/packages/zoneminder/		   :noexport:
** https://wiki.archlinux.org/index.php/PKGBUILD
** TODO OTHER DISTROS
** TODO TESTING
** TODO sed script development and documentation
   #+BEGIN_SRC conf :tangle ./devel/postinstall/httpd.conf :padline no
     #
     # This is the main Apache HTTP server configuration file.  It contains the
     # configuration directives that give the server its instructions.
     # See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
     # In particular, see 
     # <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
     # for a discussion of each configuration directive.
     #
     # Do NOT simply read the instructions in here without understanding
     # what they do.  They're here only as hints or reminders.  If you are unsure
     # consult the online docs. You have been warned.  
     #
     # Configuration and logfile names: If the filenames you specify for many
     # of the server's control files begin with "/" (or "drive:/" for Win32), the
     # server will use that explicit path.  If the filenames do *not* begin
     # with "/", the value of ServerRoot is prepended -- so "logs/access_log"
     # with ServerRoot set to "/usr/local/apache2" will be interpreted by the
     # server as "/usr/local/apache2/logs/access_log", whereas "/logs/access_log" 
     # will be interpreted as '/logs/access_log'.

     #
     # ServerRoot: The top of the directory tree under which the server's
     # configuration, error, and log files are kept.
     #
     # Do not add a slash at the end of the directory path.  If you point
     # ServerRoot at a non-local disk, be sure to specify a local disk on the
     # Mutex directive, if file-based mutexes are used.  If you wish to share the
     # same ServerRoot for multiple httpd daemons, you will need to change at
     # least PidFile.
     #
     ServerRoot "/etc/httpd"

     #
     # Mutex: Allows you to set the mutex mechanism and mutex file directory
     # for individual mutexes, or change the global defaults
     #
     # Uncomment and change the directory if mutexes are file-based and the default
     # mutex file directory is not on a local disk or is not appropriate for some
     # other reason.
     #
     # Mutex default:/run/httpd

     #
     # Listen: Allows you to bind Apache to specific IP addresses and/or
     # ports, instead of the default. See also the <VirtualHost>
     # directive.
     #
     # Change this to Listen on specific IP addresses as shown below to 
     # prevent Apache from glomming onto all bound IP addresses.
     #
     #Listen 12.34.56.78:80
     Listen 80

     #
     # Dynamic Shared Object (DSO) Support
     #
     # To be able to use the functionality of a module which was built as a DSO you
     # have to place corresponding `LoadModule' lines at this location so the
     # directives contained in it are actually available _before_ they are used.
     # Statically compiled modules (those listed by `httpd -l') do not need
     # to be loaded here.
     #
     # Example:
     # LoadModule foo_module modules/mod_foo.so
     #
     LoadModule authn_file_module modules/mod_authn_file.so
     #LoadModule authn_dbm_module modules/mod_authn_dbm.so
     #LoadModule authn_anon_module modules/mod_authn_anon.so
     #LoadModule authn_dbd_module modules/mod_authn_dbd.so
     #LoadModule authn_socache_module modules/mod_authn_socache.so
     LoadModule authn_core_module modules/mod_authn_core.so
     LoadModule authz_host_module modules/mod_authz_host.so
     LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
     LoadModule authz_user_module modules/mod_authz_user.so
     #LoadModule authz_dbm_module modules/mod_authz_dbm.so
     #LoadModule authz_owner_module modules/mod_authz_owner.so
     #LoadModule authz_dbd_module modules/mod_authz_dbd.so
     LoadModule authz_core_module modules/mod_authz_core.so
     #LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
     LoadModule access_compat_module modules/mod_access_compat.so
     LoadModule auth_basic_module modules/mod_auth_basic.so
     #LoadModule auth_form_module modules/mod_auth_form.so
     #LoadModule auth_digest_module modules/mod_auth_digest.so
     #LoadModule allowmethods_module modules/mod_allowmethods.so
     #LoadModule file_cache_module modules/mod_file_cache.so
     #LoadModule cache_module modules/mod_cache.so
     #LoadModule cache_disk_module modules/mod_cache_disk.so
     #LoadModule cache_socache_module modules/mod_cache_socache.so
     #LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
     #LoadModule socache_dbm_module modules/mod_socache_dbm.so
     #LoadModule socache_memcache_module modules/mod_socache_memcache.so
     #LoadModule watchdog_module modules/mod_watchdog.so
     #LoadModule macro_module modules/mod_macro.so
     #LoadModule dbd_module modules/mod_dbd.so
     #LoadModule dumpio_module modules/mod_dumpio.so
     #LoadModule echo_module modules/mod_echo.so
     #LoadModule buffer_module modules/mod_buffer.so
     #LoadModule data_module modules/mod_data.so
     #LoadModule ratelimit_module modules/mod_ratelimit.so
     LoadModule reqtimeout_module modules/mod_reqtimeout.so
     #LoadModule ext_filter_module modules/mod_ext_filter.so
     #LoadModule request_module modules/mod_request.so
     LoadModule include_module modules/mod_include.so
     LoadModule filter_module modules/mod_filter.so
     #LoadModule reflector_module modules/mod_reflector.so
     #LoadModule substitute_module modules/mod_substitute.so
     #LoadModule sed_module modules/mod_sed.so
     #LoadModule charset_lite_module modules/mod_charset_lite.so
     #LoadModule deflate_module modules/mod_deflate.so
     #LoadModule xml2enc_module modules/mod_xml2enc.so
     #LoadModule proxy_html_module modules/mod_proxy_html.so
     LoadModule mime_module modules/mod_mime.so
     #LoadModule ldap_module modules/mod_ldap.so
     LoadModule log_config_module modules/mod_log_config.so
     #LoadModule log_debug_module modules/mod_log_debug.so
     #LoadModule log_forensic_module modules/mod_log_forensic.so
     #LoadModule logio_module modules/mod_logio.so
     #LoadModule lua_module modules/mod_lua.so
     LoadModule env_module modules/mod_env.so
     #LoadModule mime_magic_module modules/mod_mime_magic.so
     #LoadModule cern_meta_module modules/mod_cern_meta.so
     #LoadModule expires_module modules/mod_expires.so
     LoadModule headers_module modules/mod_headers.so
     #LoadModule ident_module modules/mod_ident.so
     #LoadModule usertrack_module modules/mod_usertrack.so
     #LoadModule unique_id_module modules/mod_unique_id.so
     LoadModule setenvif_module modules/mod_setenvif.so
     LoadModule version_module modules/mod_version.so
     #LoadModule remoteip_module modules/mod_remoteip.so
     LoadModule proxy_module modules/mod_proxy.so
     LoadModule proxy_connect_module modules/mod_proxy_connect.so
     LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
     LoadModule proxy_http_module modules/mod_proxy_http.so
     LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
     LoadModule proxy_scgi_module modules/mod_proxy_scgi.so
     #LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so
     LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
     LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
     LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
     LoadModule proxy_express_module modules/mod_proxy_express.so
     #LoadModule session_module modules/mod_session.so
     #LoadModule session_cookie_module modules/mod_session_cookie.so
     #LoadModule session_crypto_module modules/mod_session_crypto.so
     #LoadModule session_dbd_module modules/mod_session_dbd.so
     LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
     #LoadModule slotmem_plain_module modules/mod_slotmem_plain.so
     #LoadModule ssl_module modules/mod_ssl.so
     #LoadModule dialup_module modules/mod_dialup.so
     LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
     LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so
     LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so
     LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so
     LoadModule mpm_event_module modules/mod_mpm_event.so
     LoadModule unixd_module modules/mod_unixd.so
     #LoadModule heartbeat_module modules/mod_heartbeat.so
     #LoadModule heartmonitor_module modules/mod_heartmonitor.so
     #LoadModule dav_module modules/mod_dav.so
     LoadModule status_module modules/mod_status.so
     LoadModule autoindex_module modules/mod_autoindex.so
     #LoadModule asis_module modules/mod_asis.so
     #LoadModule info_module modules/mod_info.so
     #LoadModule suexec_module modules/mod_suexec.so
     #LoadModule cgid_module modules/mod_cgid.so
     #LoadModule cgi_module modules/mod_cgi.so
     #LoadModule dav_fs_module modules/mod_dav_fs.so
     #LoadModule dav_lock_module modules/mod_dav_lock.so
     #LoadModule vhost_alias_module modules/mod_vhost_alias.so
     LoadModule negotiation_module modules/mod_negotiation.so
     LoadModule dir_module modules/mod_dir.so
     #LoadModule imagemap_module modules/mod_imagemap.so
     #LoadModule actions_module modules/mod_actions.so
     #LoadModule speling_module modules/mod_speling.so
     LoadModule userdir_module modules/mod_userdir.so
     LoadModule alias_module modules/mod_alias.so
     #LoadModule rewrite_module modules/mod_rewrite.so

     <IfModule unixd_module>
     #
     # If you wish httpd to run as a different user or group, you must run
     # httpd as root initially and it will switch.  
     #
     # User/Group: The name (or #number) of the user/group to run httpd as.
     # It is usually good practice to create a dedicated user and group for
     # running httpd, as with most system services.
     #
     User http
     Group http

     </IfModule>

     # 'Main' server configuration
     #
     # The directives in this section set up the values used by the 'main'
     # server, which responds to any requests that aren't handled by a
     # <VirtualHost> definition.  These values also provide defaults for
     # any <VirtualHost> containers you may define later in the file.
     #
     # All of these directives may appear inside <VirtualHost> containers,
     # in which case these default settings will be overridden for the
     # virtual host being defined.
     #

     #
     # ServerAdmin: Your address, where problems with the server should be
     # e-mailed.  This address appears on some server-generated pages, such
     # as error documents.  e.g. admin@your-domain.com
     #
     ServerAdmin you@example.com

     #
     # ServerName gives the name and port that the server uses to identify itself.
     # This can often be determined automatically, but we recommend you specify
     # it explicitly to prevent problems during startup.
     #
     # If your host doesn't have a registered DNS name, enter its IP address here.
     #
     #ServerName www.example.com:80

     #
     # Deny access to the entirety of your server's filesystem. You must
     # explicitly permit access to web content directories in other 
     # <Directory> blocks below.
     #
     <Directory />
         AllowOverride none
         Require all denied
     </Directory>

     #
     # Note that from this point forward you must specifically allow
     # particular features to be enabled - so if something's not working as
     # you might expect, make sure that you have specifically enabled it
     # below.
     #

     #
     # DocumentRoot: The directory out of which you will serve your
     # documents. By default, all requests are taken from this directory, but
     # symbolic links and aliases may be used to point to other locations.
     #
     DocumentRoot "/srv/http"
     <Directory "/srv/http">
         #
         # Possible values for the Options directive are "None", "All",
         # or any combination of:
         #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
         #
         # Note that "MultiViews" must be named *explicitly* --- "Options All"
         # doesn't give it to you.
         #
         # The Options directive is both complicated and important.  Please see
         # http://httpd.apache.org/docs/2.4/mod/core.html#options
         # for more information.
         #
         Options Indexes FollowSymLinks

         #
         # AllowOverride controls what directives may be placed in .htaccess files.
         # It can be "All", "None", or any combination of the keywords:
         #   AllowOverride FileInfo AuthConfig Limit
         #
         AllowOverride None

         #
         # Controls who can get stuff from this server.
         #
         Require all granted
     </Directory>

     #
     # DirectoryIndex: sets the file that Apache will serve if a directory
     # is requested.
     #
     <IfModule dir_module>
         DirectoryIndex index.html
     </IfModule>

     #
     # The following lines prevent .htaccess and .htpasswd files from being 
     # viewed by Web clients. 
     #
     <Files ".ht*">
         Require all denied
     </Files>

     #
     # ErrorLog: The location of the error log file.
     # If you do not specify an ErrorLog directive within a <VirtualHost>
     # container, error messages relating to that virtual host will be
     # logged here.  If you *do* define an error logfile for a <VirtualHost>
     # container, that host's errors will be logged there and not here.
     #
     ErrorLog "/var/log/httpd/error_log"

     #
     # LogLevel: Control the number of messages logged to the error_log.
     # Possible values include: debug, info, notice, warn, error, crit,
     # alert, emerg.
     #
     LogLevel warn

     <IfModule log_config_module>
         #
         # The following directives define some format nicknames for use with
         # a CustomLog directive (see below).
         #
         LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
         LogFormat "%h %l %u %t \"%r\" %>s %b" common

         <IfModule logio_module>
           # You need to enable mod_logio.c to use %I and %O
           LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
         </IfModule>

         #
         # The location and format of the access logfile (Common Logfile Format).
         # If you do not define any access logfiles within a <VirtualHost>
         # container, they will be logged here.  Contrariwise, if you *do*
         # define per-<VirtualHost> access logfiles, transactions will be
         # logged therein and *not* in this file.
         #
         CustomLog "/var/log/httpd/access_log" common

         #
         # If you prefer a logfile with access, agent, and referer information
         # (Combined Logfile Format) you can use the following directive.
         #
         #CustomLog "/var/log/httpd/access_log" combined
     </IfModule>

     <IfModule alias_module>
         #
         # Redirect: Allows you to tell clients about documents that used to 
         # exist in your server's namespace, but do not anymore. The client 
         # will make a new request for the document at its new location.
         # Example:
         # Redirect permanent /foo http://www.example.com/bar

         #
         # Alias: Maps web paths into filesystem paths and is used to
         # access content that does not live under the DocumentRoot.
         # Example:
         # Alias /webpath /full/filesystem/path
         #
         # If you include a trailing / on /webpath then the server will
         # require it to be present in the URL.  You will also likely
         # need to provide a <Directory> section to allow access to
         # the filesystem path.

         #
         # ScriptAlias: This controls which directories contain server scripts. 
         # ScriptAliases are essentially the same as Aliases, except that
         # documents in the target directory are treated as applications and
         # run by the server when requested rather than as documents sent to the
         # client.  The same rules about trailing "/" apply to ScriptAlias
         # directives as to Alias.
         #
         ScriptAlias /cgi-bin/ "/srv/http/cgi-bin/"

     </IfModule>

     <IfModule cgid_module>
         #
         # ScriptSock: On threaded servers, designate the path to the UNIX
         # socket used to communicate with the CGI daemon of mod_cgid.
         #
         #Scriptsock cgisock
     </IfModule>

     #
     # "/srv/http/cgi-bin" should be changed to whatever your ScriptAliased
     # CGI directory exists, if you have that configured.
     #
     <Directory "/srv/http/cgi-bin">
         AllowOverride None
         Options None
         Require all granted
     </Directory>

     <IfModule mime_module>
         #
         # TypesConfig points to the file containing the list of mappings from
         # filename extension to MIME-type.
         #
         TypesConfig conf/mime.types

         #
         # AddType allows you to add to or override the MIME configuration
         # file specified in TypesConfig for specific file types.
         #
         #AddType application/x-gzip .tgz
         #
         # AddEncoding allows you to have certain browsers uncompress
         # information on the fly. Note: Not all browsers support this.
         #
         #AddEncoding x-compress .Z
         #AddEncoding x-gzip .gz .tgz
         #
         # If the AddEncoding directives above are commented-out, then you
         # probably should define those extensions to indicate media types:
         #
         AddType application/x-compress .Z
         AddType application/x-gzip .gz .tgz

         #
         # AddHandler allows you to map certain file extensions to "handlers":
         # actions unrelated to filetype. These can be either built into the server
         # or added with the Action directive (see below)
         #
         # To use CGI scripts outside of ScriptAliased directories:
         # (You will also need to add "ExecCGI" to the "Options" directive.)
         #
         #AddHandler cgi-script .cgi

         # For type maps (negotiated resources):
         #AddHandler type-map var

         #
         # Filters allow you to process content before it is sent to the client.
         #
         # To parse .shtml files for server-side includes (SSI):
         # (You will also need to add "Includes" to the "Options" directive.)
         #
         #AddType text/html .shtml
         #AddOutputFilter INCLUDES .shtml
     </IfModule>

     #
     # The mod_mime_magic module allows the server to use various hints from the
     # contents of the file itself to determine its type.  The MIMEMagicFile
     # directive tells the module where the hint definitions are located.
     #
     #MIMEMagicFile conf/magic

     #
     # Customizable error responses come in three flavors:
     # 1) plain text 2) local redirects 3) external redirects
     #
     # Some examples:
     #ErrorDocument 500 "The server made a boo boo."
     #ErrorDocument 404 /missing.html
     #ErrorDocument 404 "/cgi-bin/missing_handler.pl"
     #ErrorDocument 402 http://www.example.com/subscription_info.html
     #

     #
     # MaxRanges: Maximum number of Ranges in a request before
     # returning the entire resource, or one of the special
     # values 'default', 'none' or 'unlimited'.
     # Default setting is to accept 200 Ranges.
     #MaxRanges unlimited

     #
     # EnableMMAP and EnableSendfile: On systems that support it, 
     # memory-mapping or the sendfile syscall may be used to deliver
     # files.  This usually improves server performance, but must
     # be turned off when serving from networked-mounted 
     # filesystems or if support for these functions is otherwise
     # broken on your system.
     # Defaults: EnableMMAP On, EnableSendfile Off
     #
     #EnableMMAP off
     #EnableSendfile on

     # Supplemental configuration
     #
     # The configuration files in the conf/extra/ directory can be 
     # included to add extra features or to modify the default configuration of 
     # the server, or you may simply copy their contents here and change as 
     # necessary.

     # Server-pool management (MPM specific)
     Include conf/extra/httpd-mpm.conf

     # Multi-language error messages
     Include conf/extra/httpd-multilang-errordoc.conf

     # Fancy directory listings
     Include conf/extra/httpd-autoindex.conf

     # Language settings
     Include conf/extra/httpd-languages.conf

     # User home directories
     Include conf/extra/httpd-userdir.conf

     # Real-time info on requests and configuration
     #Include conf/extra/httpd-info.conf

     # Virtual hosts
     #Include conf/extra/httpd-vhosts.conf

     # Local access to the Apache HTTP Server Manual
     #Include conf/extra/httpd-manual.conf

     # Distributed authoring and versioning (WebDAV)
     #Include conf/extra/httpd-dav.conf

     # Various default settings
     Include conf/extra/httpd-default.conf

     # Configure mod_proxy_html to understand HTML4/XHTML1
     <IfModule proxy_html_module>
     Include conf/extra/proxy-html.conf
     </IfModule>

     # Secure (SSL/TLS) connections
     #Include conf/extra/httpd-ssl.conf
     #
     # Note: The following must must be present to support
     #       starting without SSL on platforms with no /dev/random equivalent
     #       but a statically compiled-in mod_ssl.
     #
     <IfModule ssl_module>
     SSLRandomSeed startup builtin
     SSLRandomSeed connect builtin
     </IfModule>
     #
     # uncomment out the below to deal with user agents that deliberately
     # violate open standards by misusing DNT (DNT *must* be a specific
     # end-user choice)
     #
     #<IfModule setenvif_module>
     #BrowserMatch "MSIE 10.0;" bad_DNT
     #</IfModule>
     #<IfModule headers_module>
     #RequestHeader unset DNT env=bad_DNT
     #</IfModule>


   #+END_SRC
** TODO https://github.com/ZoneMinder/ZoneMinder/issues/88
** zoneminder-aur wiki
** What is connkey?
* https://github.com/ZoneMinder/ZoneMinder/pull/524
* Changelog
** Sun Sep 28 12:23:24 PDT 2014 [zoneminder.service]
   I copied the zoneminder.service file found in the misc folder
** Sun Sep 28 12:34:06 PDT 2014 [/var/run/zm/zm.pid]
** Sun Sep 28 12:49:01 PDT 2014 \|^;extension=pdo_mysql.so$| s|^;||;
** Sun Sep 28 16:48:51 PDT 2014 /tmp/zoneminder => /tmp/zm, -DZM_TMPDIR=/tmp/zm -DZM_PATH_SOCKS=/tmp/zm
* PKGBUILD  2014-09-03						   :noexport:
  # Contributor: /dev/rs0                  </dev/rs0@secretco.de.com>
# Contributor: Jacek Burghardt           <jacek@hebe.us>
# Contributor: Vojtech Aschenbrenner     <v@asch.cz>
# Contributor: Jason Gardner             <buhrietoe@gmail.com>
# Contributor: Ross melin                <rdmelin@gmail.com>
# Contributor (Parabola): Márcio Silva   <coadde@lavabit.com>
# Contributor (Parabola): André Silva    <emulatorman@lavabit.com>

# based of debian squeeze package

pkgbase=zoneminder
pkgname=zoneminder
pkgver=1.27.0
pkgrel=1
pkgdesc='Capture, analyse, record and monitor video security cameras'
arch=(
  i686
  x86_64
  mips64el
  arm
)
backup=(
  etc/zm.conf
)
url="https://github.com/ZoneMinder/ZoneMinder/archive/"
license=(
  GPL
)
depends=(
  apache
  cambozola
  gnutls
  mariadb
  perl-archive-zip
  perl-date-manip
  perl-dbd-mysql
  perl-dbi
  perl-expect
  perl-libwww
  perl-mime-lite
  perl-mime-tools
  perl-php-serialization
  perl-net-sftp-foreign
  perl-sys-mmap
  perl-time-modules
  perl-x10
  php
  php-apache
  php-gd
  php-mcrypt
)
makedepends=(
  netpbm
)
optdepends=(
  netpbm
)
install=$pkgbase.install
source=(
  https://github.com/ZoneMinder/ZoneMinder/archive/v$pkgver.tar.gz
  httpd-$pkgbase.conf
  $pkgbase
  $pkgbase.service
)
sha512sums=(
  8a349558399381a9062365ddc8bd8f815e3800929914096b2e4ea63e4d6dd12054f7b849fab5bea4bcfc87ea60739479a55734c7075a74aab0622d35f1d2bb14
  fb9bf263c37fae30d775872a33cb319f2f2a7a4f38faff8c143253dbefd7278b295d0805e11ace6423a8ec2b50ef60f3426b6e6a53548c867ef7f109baa52c36
  ab4e1d5ddaf4d9cd53d6ca59d7965902afd6a2dc830fbbafa270736c52c2b3563075fee860bb0276466f96e9dbfb71b259ac45a4ae2e4ead8eaec154a0159eb0
  cfb0eb87a989236c72741a496ddc6a73aa2696e5beaaca4836d3c231ddb24c7ef5e9f65e7afa49674f2115cbfa4a07c75486e1947ce294c816ddbb875f3b99cf
)
build() {
  cd $srcdir/ZoneMinder-$pkgver
  ./bootstrap.sh


export CXXFLAGS=-D__STDC_CONSTANT_MACROS
./configure --prefix=/usr\
    --enable-debug=no\
    --enable-mmap=yes\
    --sysconfdir=/etc\
    --with-cgidir=/srv/http/cgi-bin\
    --with-extralibs='-L/usr/lib -L/usr/lib/mysql'\
    --with-libarch=lib\
    --with-ffmpeg=/usr \
    --with-mysql=/usr\
    --with-webdir=/srv/http/$pkgbase\
    --with-webgroup=http\
    --with-webhost=localhost\
    --with-webuser=http \

  make V=0
}

package() {
  cd $srcdir/ZoneMinder-$pkgver

  make DESTDIR=$pkgdir install

  mkdir -p $pkgdir/{etc/{httpd/conf/extra,rc.d},srv/http/{cgi-bin,$pkgbase},usr/{lib/systemd/system,share/{license/$pkgbase,$pkgbase/db}},var/{cache/$pkgbase,log/$pkgbase}}
  mkdir -p $pkgdir/srv/zoneminder/socks
  chown -R http.http $pkgdir/{etc/zm.conf,var/{cache/$pkgbase,log/$pkgbase}}
  chown -R http.http $pkgdir/srv/zoneminder/socks
  chmod 0700 $pkgdir/etc/zm.conf

  for i in events images temp; do
    mv    $pkgdir/srv/http/$pkgbase/$i $pkgdir/var/cache/$pkgbase/$i
    ln -s /var/cache/$pkgbase/$i       $pkgdir/srv/http/$pkgbase/$i
    chown -h http.http                 $pkgdir/srv/http/$pkgbase/$i
  done

  ln -s /srv/http/cgi-bin                  $pkgdir/srv/http/$pkgbase
  chown -h http.http                       $pkgdir/srv/http/{cgi-bin,$pkgbase,$pkgbase/cgi-bin}

  ln -s /usr/share/cambozola/cambozola.jar $pkgdir/srv/http/$pkgbase

  install -D -m 644 $srcdir/httpd-$pkgbase.conf $pkgdir/etc/httpd/conf/extra
  install -D -m 644 $srcdir/$pkgbase            $pkgdir/etc/rc.d
  install -D -m 644 $srcdir/$pkgbase.service    $pkgdir/usr/lib/systemd/system
  install -D -m 644 COPYING                     $pkgdir/usr/share/license/$pkgbase
  install -D -m 644 db/zm*.sql                  $pkgdir/usr/share/$pkgbase/db
}
** TEMP
   + https://github.com/eyezm/ZoneMinder/blob/master/src/zm_remote_camera_http.cpp
   + http://www.ipcamtalk.com/showthread.php?144-Foscam-FI8910W-Firmware-Update-March-20-2014
   + http://foscam.us/forum/fi8910w-zoneminder-corrupt-jpeg-data-t1782.html
   + http://mainstreetanswers.org/foscam.php
   + http://foscam.us/forum/fi9802w-can-t-get-motionn-jpeg-on-zoneminder-t4822.html
   + http://lachlanmiskin.com/blog/2012/06/25/zoneminder-foscam-fi8918w-war-corrupt-jpeg-data-extraneous-bytes-before-marker-0xd9/
   + http://www-personal.umd.umich.edu/~dennismv/corruptjpeg.html
   + http://foscam.us/forum/fi9802w-can-t-get-motionn-jpeg-on-zoneminder-t4822.html
   + http://sighworld.com/category/zoneminder/
   + https://bugs.launchpad.net/ubuntu/+source/zoneminder/+bug/1159361

* REMOVED CODE
** pre_install function in zoneminder.install
  #+BEGIN_SRC sh
     pre_install() {
         set -e
         abort=false
         if [ -L /srv/http/zoneminder/events ]; then
             l=$(readlink /srv/http/zoneminder/events)
             if [ $l != /var/cache/zoneminder/events ]; then
                 abort=true
             fi
         fi
         if [ -L /srv/http/zoneminder/images ]; then
             l=$(readlink /srv/http/zoneminder/images)
             if [ $l != /var/cache/zoneminder/images ]; then
                 abort=true
             fi
         fi
         if [ $abort = true ]; then
             cat >&2 << EOF
     Aborting installation of zoneminder due to non-default symlinks in
     /srv/http/zoneminder for the images and/or events directory, which could
     result in loss of data. Please move your data in each of these directories to
     /var/cache/zoneminder before installing zoneminder from the package.
     EOF
             exit 1
         fi
         exit 0
     }

  #+END_SRC
** post_install statements in zoneminder.install
   #+BEGIN_SRC sh
     if [[ -d /var/log/zoneminder ]]; then
         chmod 0755 /var/log/zoneminder
         chown http.http /var/log/zoneminder
     else
         mkdir -m 0755 /var/log/zoneminder
         chown http.http /var/log/zoneminder
     fi
     if [[ -d /tmp/zm ]]; then
         chmod 0700 /tmp/zm
         chown http.http /tmp/zm
     else
         mkdir -m 0700 /tmp/zm
         chown http.http /tmp/zm
     fi
   #+END_SRC

  
